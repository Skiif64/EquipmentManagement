@page "/equipment/employee/"
@using EquimentManagement.Contracts.Responses;
@inject HttpClient Client;
@attribute [Authorize]

<h3>EmployeeEquipment</h3>

   @if (equipments is not null)
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    <span>Тип</span>
                </th>
                <th>
                    <span>Артикул</span>
                </th>
                <th>
                    <span>Серийный номер</span>
                </th>
                <th>
                    <span>Описание</span>
                </th>                
            </tr>
        </thead>
        <tbody>

            @foreach (var equipment in equipments)
            {
                <tr>
                    <td>
                        <span>@equipment.Type</span>
                    </td>
                    <td>
                        <span>@equipment.Article</span>
                    </td>
                    <td>
                        <span>@equipment.SerialNumber</span>
                    </td>
                    <td>
                        <textarea readonly="readonly">@equipment.Description</textarea>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="d-flex">
        <div class="my-auto mx-auto">
            <LoadingCircle />
        </div>
    </div>
}

@code {
    private IEnumerable<EquipmentResponse>? equipments;
    [Parameter]
    public Guid EmployeeId { get; set; }

    private async Task LoadEmployeeEquipmentAsync()
    {
        var equipments = await Client.GetFromJsonAsync<IEnumerable<EquipmentResponse>>($"api/equipment/{EmployeeId}");

    }
}
