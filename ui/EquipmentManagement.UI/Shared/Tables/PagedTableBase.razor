@using EquimentManagement.Contracts.Responses;
@typeparam TEntity

<table class="table table-hover">
    <thead>
        <tr>
            @HeaderTemplate
        </tr>
    </thead>
    <tbody>
        @if (pagedList is null)
        {
            <LoadingCircle />
        }
        else
        {
            @foreach (var entity in pagedList.Items)
            {
                <tr>
                    @RowTemplate?.Invoke(entity)
                </tr>
            }
        }
    </tbody>
</table>

@code {
    private PagedListResponse<TEntity>? pagedList;

    [Parameter]
    public Func<int, Task<PagedListResponse<TEntity>>> EntitySource { get; set; }

    [Parameter]
    public RenderFragment? HeaderTemplate { get; set; }
    [Parameter]
    public RenderFragment<TEntity>? RowTemplate { get; set; }

    protected async Task OnPreviousPageClicked()
    {
        if (pagedList?.Page < 1)
            return;
        pagedList = await EntitySource(pagedList?.Page - 1 ?? 1);
        StateHasChanged();
    }

    protected async Task OnNextPageClicked()
    {
        if (pagedList?.IsLastPage ?? true)
            return;

        pagedList = await EntitySource(pagedList?.Page + 1 ?? 1);
        StateHasChanged();
    }
}
